---
title: "Análisis Factorial Exploratorio"
date: "2022-11-17"
lang: es
output:
  number_sections: true
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, cache = T)
```

# Librerías y Datos

## Librerías

```{r results='hide'}

pacman::p_load(stargazer, # Reporte
sjPlot, sjmisc, # reporte y gráficos
sjlabelled,
corrplot, # grafico correlaciones
xtable, # Reporte
Hmisc, # varias funciones
psych, # fa y principal factors
psy, # scree plot function
nFactors, # parallel
GPArotation) # rotación

```
## Datos

Lectura de datos
```{r eval=FALSE}
data <- read.csv("input/data/efa_asignaturas.csv")
```

```{r echo=FALSE}
data <- read.csv("../files/data/external_data/efa_asignaturas.csv")
```

- Muestra de 300 alumnos a los que se le pregunta por su asignatura favorita en una escala de 1 (no me agrada) a 5 (me agrada)

## Exploración de datos

```{r }
summary(data)

names(data)
dim(data)  # filas columnas

nrow(na.omit(data)) # número de casos con datos completos


```

# Descriptivos

```{r }

stargazer(data, type = "text")  # para visualizar en consola

```

```{r results='asis'}
stargazer(data, type = "html") # a html
```


## Gráfico barras apiladas

```{r }
#sjplot(data$BIO, "frq") # no muy buena descripción ...

names(data)
plot_stackfrq(data)

```

Gráfico final

```{r}
#label values

data <- data %>%  set_labels (., labels=c("No le agrada"=1,
  "Le agrada"=5))

plot_stackfrq(data, sort.frq = "last.desc", geom.colors = "OrRd") #+ theme(legend.position="bottom")


```


## Analisis de matriz de correlaciones

Matriz
```{r }
corMat  <- cor(data)  # estimar matriz pearson
options(digits=2)
corMat # muestra matriz
```

Reporte tabla
```{r results='asis'}
tab_corr(data, triangle = "lower")

```

Reporte gráfico con corrplot
```{r }
M=cor(data) # matriz simple de correlaciones de los datos
corrplot(M, type="lower") # lower x bajo diagonal
```

Otra opción
```{r }
corrplot(M, type="lower",
      order="AOE", cl.pos="b", tl.pos="d") #agrega nombres en diag.
```


# Análisis factorial

¿Qué se puede deducir de la matriz de correlaciones en relación a la estructura subyacente en términos de variables latentes? Vemos dos grupos de indicadores asociados entre sí, y no asociados con el otro grupo. Por un lado, el grupo de chem, bio y geo, y por otro el de stat, calc y alg.

Adecuación de matriz para análisis factorial
```{r }
KMO(corMat)
cortest.bartlett(corMat, n = 300)
```


## Seleccion de numero de factores

Graficos
```{r }
scree.plot(data)
```


```{r }
fa.parallel(corMat, n.obs=300)
```



```{r }
library(nFactors)
ev <- eigen(corMat) # get eigenvalues
ap <- parallel(subject=300,var=6,
  rep=100,cent=.05)
nS <- nScree(x=ev$values, aparallel=ap$eigen$qevpea)
plotnScree(nS)
```

Factor de aceleración: solución numérica que muestra el punto que presenta el mayor cambio de pendiente

Optimal coordinates: muestra el primer eigenvalue que puede ser mejor "extrapolado" desde el eigenvalue previo ("optimal coordinates are the extrapolated coordinates of the previous eigenvalue that allow the observed eigenvalue to go beyond this extrapolation" (http://www.inside-r.org/packages/cran/nFactors/docs/nScree)


## Extracción

Ejes principales
```{r }
fac_pa <- fa(r = data, nfactors = 2, fm= "pa")
#summary(fac_pa)
fac_pa
```

Maximum likelihood

```{r results="hide"}
fac_ml <- fa(r = data, nfactors = 2, fm= "ml")
summary(fac_ml)
```

Plot de cargas factoriales ml

```{r }
factor.plot(fac_ml, labels=rownames(fac_ml$loadings))
```

**Obtención de Puntajes factoriales**

Los puntajes factoriales son vectores/variables que representan al factor latente como una variable observada y que por lo tanto suma una columna a la base de datos por cada factor extraído. Como la variable latente no tiene métrica, se le otorga una con media 0 y varianza 1. Los puntajes son una especie de índice pero donde la constribución de cada indicador al índice se encuentra ponderada por su carga factorial (su contribución a la variable latente común o factor).

```{r }
fac_ml <- fa(r = data, nfactors = 2, fm= "ml", scores="regression")
data2=data
data3 <- cbind(data2, fac_ml$scores)
head(data3)

```


## Rotación

Varimax (ortogonal)

```{r }
fac_ml_var <- fa(r = data, nfactors = 2, fm= "ml", rotate="varimax") # ortogonal
fac_ml_var
```

Promax (oblicua)

```{r }
fac_ml_pro <- fa(r = data, nfactors = 2, fm= "ml", rotate="promax")
fac_ml_pro
```

## Reporte: Tabla análisis factorial

A html via sjPlot

```{r}
tab_fa(data, rotation = "varimax",show.comm = TRUE, title = "Análisis factorial asignaturas")
```


# Código

El código de esta página se encuentra disponible en el repositorio del curso en [Github](https://github.com/juancarloscastillo/encuestas-sociales/blob/main/resource/05-resource.qmd)
